{"ast":null,"code":"var _jsxFileName = \"/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/HW1.tsx\";\nimport React from \"react\";\nimport Message from \"./message/Message\";\nimport MessageSender from \"./message-sender/MessageSender\";\nimport FriendMessage from \"./friend-message/FriendMessage\";\nimport avatar from \"./avatar.png\";\nimport styled from \"styled-components\";\n\n/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */\n\n// нужно создать правильный тип вместо any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// структуру объекта не менять\nexport const message0 = {\n  id: 0,\n  user: {\n    avatar: avatar,\n    // можно менять\n    name: \"Some Name\" // можно менять\n  },\n\n  message: {\n    text: \"some textsome textsome textsome textsome textsome textsome text\",\n    // можно менять\n    time: \"22:00\" // можно менять\n  }\n};\n\nexport const friendMessage0 = {\n  id: 100,\n  user: {\n    avatar: avatar,\n    // можно менять\n    name: \"Friend Name\" // можно менять\n  },\n\n  message: {\n    text: \"зеркальное сообщение для тренировки css\",\n    // можно менять\n    time: \"22:00\" // можно менять\n  }\n};\n\nconst HW1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hw1\",\n    children: [/*#__PURE__*/_jsxDEV(HW1_Title, {\n      children: \"Hometask \\u21161\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainBlock, {\n      children: [/*#__PURE__*/_jsxDEV(MessageBlock, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          message: message0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FriendMessage, {\n          message: friendMessage0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageSender, {\n        M: Message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = HW1;\nexport default HW1;\nconst HW1_Title = styled.div`\n  color: rgb(0, 0, 0);\n  font-family: Montserrat;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 27px;\n  letter-spacing: 0%;\n  text-align: left;\n`;\n_c2 = HW1_Title;\nconst MainBlock = styled.div`\n\n`;\n_c3 = MainBlock;\nconst MessageBlock = styled.div`\n\n`;\n_c4 = MessageBlock;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HW1\");\n$RefreshReg$(_c2, \"HW1_Title\");\n$RefreshReg$(_c3, \"MainBlock\");\n$RefreshReg$(_c4, \"MessageBlock\");","map":{"version":3,"names":["React","Message","MessageSender","FriendMessage","avatar","styled","message0","id","user","name","message","text","time","friendMessage0","HW1","HW1_Title","div","MainBlock","MessageBlock"],"sources":["/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/HW1.tsx"],"sourcesContent":["import React from \"react\";\nimport Message from \"./message/Message\";\nimport MessageSender from \"./message-sender/MessageSender\";\nimport s2 from \"../../s1-main/App.module.css\";\nimport FriendMessage from \"./friend-message/FriendMessage\";\nimport avatar from \"./avatar.png\";\nimport styled from \"styled-components\";\n\n/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */\n\n// нужно создать правильный тип вместо any\n\ntype UserType = {\n  avatar: string;\n  name: string;\n};\n\ntype MessagePropsType = {\n  text: string;\n  time: string;\n};\n\nexport type MessageType = {\n  id: number;\n  user: UserType;\n  message: MessagePropsType;\n};\n\n// структуру объекта не менять\nexport const message0: MessageType = {\n  id: 0,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Some Name\", // можно менять\n  },\n  message: {\n    text: \"some textsome textsome textsome textsome textsome textsome text\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\nexport const friendMessage0: MessageType = {\n  id: 100,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Friend Name\", // можно менять\n  },\n  message: {\n    text: \"зеркальное сообщение для тренировки css\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\n\nconst HW1 = () => {\n  return (\n    <div id={\"hw1\"}>\n      <HW1_Title>Hometask №1</HW1_Title>\n      <MainBlock>\n        {/*проверка отображения (не менять)*/}\n        <MessageBlock>\n          <Message message={message0} />\n          <FriendMessage message={friendMessage0} />\n        </MessageBlock>\n\n        {/*для автоматической проверки дз (не менять)*/}\n        <MessageSender M={Message} />\n      </MainBlock>\n    </div>\n  );\n};\n\nexport default HW1;\n\nconst HW1_Title = styled.div`\n  color: rgb(0, 0, 0);\n  font-family: Montserrat;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 27px;\n  letter-spacing: 0%;\n  text-align: left;\n`;\n\nconst MainBlock = styled.div`\n\n`\n\nconst MessageBlock = styled.div`\n\n`\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAM,gCAAgC;AAE1D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAkBA;AACA,OAAO,MAAMC,QAAqB,GAAG;EACnCC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE;IACJJ,MAAM,EAAEA,MAAM;IAAE;IAChBK,IAAI,EAAE,WAAW,CAAE;EACrB,CAAC;;EACDC,OAAO,EAAE;IACPC,IAAI,EAAE,iEAAiE;IAAE;IACzEC,IAAI,EAAE,OAAO,CAAE;EACjB;AACF,CAAC;;AACD,OAAO,MAAMC,cAA2B,GAAG;EACzCN,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE;IACJJ,MAAM,EAAEA,MAAM;IAAE;IAChBK,IAAI,EAAE,aAAa,CAAE;EACvB,CAAC;;EACDC,OAAO,EAAE;IACPC,IAAI,EAAE,yCAAyC;IAAE;IACjDC,IAAI,EAAE,OAAO,CAAE;EACjB;AACF,CAAC;;AAED,MAAME,GAAG,GAAG,MAAM;EAChB,oBACE;IAAK,EAAE,EAAE,KAAM;IAAA,wBACb,QAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eAClC,QAAC,SAAS;MAAA,wBAER,QAAC,YAAY;QAAA,wBACX,QAAC,OAAO;UAAC,OAAO,EAAER;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9B,QAAC,aAAa;UAAC,OAAO,EAAEO;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eAGf,QAAC,aAAa;QAAC,CAAC,EAAEZ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,KAhBIa,GAAG;AAkBT,eAAeA,GAAG;AAElB,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARID,SAAS;AAUf,MAAME,SAAS,GAAGZ,MAAM,CAACW,GAAI;AAC7B;AACA,CAAC;AAAA,MAFKC,SAAS;AAIf,MAAMC,YAAY,GAAGb,MAAM,CAACW,GAAI;AAChC;AACA,CAAC;AAAA,MAFKE,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}