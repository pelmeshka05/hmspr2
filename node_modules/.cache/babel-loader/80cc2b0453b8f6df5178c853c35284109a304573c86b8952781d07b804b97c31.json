{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React from\"react\";import Message from\"./message/Message\";import MessageSender from\"./message-sender/MessageSender\";import FriendMessage from\"./friend-message/FriendMessage\";import avatar from\"./avatar.png\";import styled from\"styled-components\";/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */ // нужно создать правильный тип вместо any\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// структуру объекта не менять\nexport var message0={id:0,user:{avatar:avatar,// можно менять\nname:\"Ivan\"// можно менять\n},message:{text:\"hello, i`m Ivan\",// можно менять\ntime:\"22:00\"// можно менять\n}};export var friendMessage0={id:100,user:{avatar:avatar,// можно менять\nname:\"Friend Name\"// можно менять\n},message:{text:\"зеркальное сообщение для тренировки css\",// можно менять\ntime:\"22:00\"// можно менять\n}};var HW1=function HW1(){return/*#__PURE__*/_jsxs(\"div\",{id:\"hw1\",children:[/*#__PURE__*/_jsx(HW1_Title,{children:\"Hometask \\u21161\"}),/*#__PURE__*/_jsxs(MainBlock,{children:[/*#__PURE__*/_jsxs(MessageBlock,{children:[/*#__PURE__*/_jsx(Message,{message:message0}),/*#__PURE__*/_jsx(FriendMessage,{message:friendMessage0})]}),/*#__PURE__*/_jsx(MessageSender,{M:Message})]})]});};export default HW1;var HW1_Title=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: rgb(0, 0, 0);\\n  font-family: Montserrat;\\n  font-size: 22px;\\n  font-weight: 600;\\n  line-height: 27px;\\n  letter-spacing: 0%;\\n  text-align: left;\\n\"])));var MainBlock=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\n\"])));var MessageBlock=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n\\n\"])));","map":{"version":3,"names":["React","Message","MessageSender","FriendMessage","avatar","styled","message0","id","user","name","message","text","time","friendMessage0","HW1","HW1_Title","div","MainBlock","MessageBlock"],"sources":["/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/HW1.tsx"],"sourcesContent":["import React from \"react\";\nimport Message from \"./message/Message\";\nimport MessageSender from \"./message-sender/MessageSender\";\nimport s2 from \"../../s1-main/App.module.css\";\nimport FriendMessage from \"./friend-message/FriendMessage\";\nimport avatar from \"./avatar.png\";\nimport styled from \"styled-components\";\n\n/*\n * 1 - описать тип MessageType\n * 2 - описать тип MessagePropsType в файле Message.tsx\n * 3 - в файле Message.tsx отобразить приходящие данные\n * 4 - выполнить пункты 2, 3 в файле FriendMessage.tsx\n * 5 - сделать стили в соответствии с дизайном\n * */\n\n// нужно создать правильный тип вместо any\n\ntype UserType = {\n  avatar: string;\n  name: string;\n};\n\ntype MessagePropsType = {\n  text: string;\n  time: string;\n};\n\nexport type MessageType = {\n  id: number;\n  user: UserType;\n  message: MessagePropsType;\n};\n\n// структуру объекта не менять\nexport const message0: MessageType = {\n  id: 0,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Ivan\", // можно менять\n  },\n  message: {\n    text: \"hello, i`m Ivan\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\nexport const friendMessage0: MessageType = {\n  id: 100,\n  user: {\n    avatar: avatar, // можно менять\n    name: \"Friend Name\", // можно менять\n  },\n  message: {\n    text: \"зеркальное сообщение для тренировки css\", // можно менять\n    time: \"22:00\", // можно менять\n  },\n};\n\nconst HW1 = () => {\n  return (\n    <div id={\"hw1\"}>\n      <HW1_Title>Hometask №1</HW1_Title>\n      <MainBlock>\n        {/*проверка отображения (не менять)*/}\n        <MessageBlock>\n          <Message message={message0} />\n          <FriendMessage message={friendMessage0} />\n        </MessageBlock>\n\n        {/*для автоматической проверки дз (не менять)*/}\n        <MessageSender M={Message} />\n      </MainBlock>\n    </div>\n  );\n};\n\nexport default HW1;\n\nconst HW1_Title = styled.div`\n  color: rgb(0, 0, 0);\n  font-family: Montserrat;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 27px;\n  letter-spacing: 0%;\n  text-align: left;\n`;\n\nconst MainBlock = styled.div`\n\n`\n\nconst MessageBlock = styled.div`\n\n`\n\n"],"mappings":"gPAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,QAAO,KAAM,mBAAmB,CACvC,MAAOC,cAAa,KAAM,gCAAgC,CAE1D,MAAOC,cAAa,KAAM,gCAAgC,CAC1D,MAAOC,OAAM,KAAM,cAAc,CACjC,MAAOC,OAAM,KAAM,mBAAmB,CAEtC;AACA;AACA;AACA;AACA;AACA;AACA,KANA,CAQA;AAAA,wFAkBA;AACA,MAAO,IAAMC,SAAqB,CAAG,CACnCC,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,CACJJ,MAAM,CAAEA,MAAM,CAAE;AAChBK,IAAI,CAAE,MAAQ;AAChB,CAAC,CACDC,OAAO,CAAE,CACPC,IAAI,CAAE,iBAAiB,CAAE;AACzBC,IAAI,CAAE,OAAS;AACjB,CACF,CAAC,CACD,MAAO,IAAMC,eAA2B,CAAG,CACzCN,EAAE,CAAE,GAAG,CACPC,IAAI,CAAE,CACJJ,MAAM,CAAEA,MAAM,CAAE;AAChBK,IAAI,CAAE,aAAe;AACvB,CAAC,CACDC,OAAO,CAAE,CACPC,IAAI,CAAE,yCAAyC,CAAE;AACjDC,IAAI,CAAE,OAAS;AACjB,CACF,CAAC,CAED,GAAME,IAAG,CAAG,QAANA,IAAG,EAAS,CAChB,mBACE,aAAK,EAAE,CAAE,KAAM,wBACb,KAAC,SAAS,+BAAwB,cAClC,MAAC,SAAS,yBAER,MAAC,YAAY,yBACX,KAAC,OAAO,EAAC,OAAO,CAAER,QAAS,EAAG,cAC9B,KAAC,aAAa,EAAC,OAAO,CAAEO,cAAe,EAAG,GAC7B,cAGf,KAAC,aAAa,EAAC,CAAC,CAAEZ,OAAQ,EAAG,GACnB,GACR,CAEV,CAAC,CAED,cAAea,IAAG,CAElB,GAAMC,UAAS,CAAGV,MAAM,CAACW,GAAG,kOAQ3B,CAED,GAAMC,UAAS,CAAGZ,MAAM,CAACW,GAAG,uEAE3B,CAED,GAAME,aAAY,CAAGb,MAAM,CAACW,GAAG,uEAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}