{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React from\"react\";import styled from\"styled-components\";// нужно создать правильный тип вместо any\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// нужно отобразить приходящие данные\nvar Message=function Message(props){return/*#__PURE__*/_jsx(MessageWrapper,{id:\"hw1-message-\"+props.message.id,children:/*#__PURE__*/_jsxs(MessageBlock,{children:[/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsxs(SendedMessage,{children:[/*#__PURE__*/_jsx(Name,{id:\"hw1-name-\"+props.message.id,children:props.message.user.name}),/*#__PURE__*/_jsx(Mes,{id:\"hw1-text-\"+props.message.id,children:props.message.message.text})]}),/*#__PURE__*/_jsx(Avatar,{id:\"hw1-avatar-\"+props.message.id// создаёт студент\n,src:props.message.user.avatar//\n})]}),/*#__PURE__*/_jsx(Time,{id:\"hw1-time-\"+props.message.id,children:props.message.message.time})]})});};export default Message;var MessageWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: end;\\n  margin-bottom: 50px;\\n\"])));var MessageBlock=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 580px;\\n  height: 60px;\\n  display: flex;\\n  flex-direction: column;\\n  text-align: right;\\n\"])));var Block=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: end;\\n  \\n\"])));var Avatar=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 48px;\\n  height: 48px;\\n  margin-left: 5px;\\n  margin-right: 15px;\\n\"])));var SendedMessage=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\nborder-radius: 10px;\\n  box-shadow: 0px 1px 2px 0px rgba(29, 33, 38, 0.1),\\n    0px 5px 20px 0px rgba(29, 33, 38, 0.03);\\n  background: rgb(0, 102, 204);\\n\\n  width: 527px;\\n  height: 60px;\\n  text-align: right;\\n  padding: 10px;\\n\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n\"])));var Name=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: rgb(255, 255, 255);\\n  font-family: Montserrat;\\n  font-size: 18px;\\n  font-weight: 600;\\n  line-height: 22px;\\n  letter-spacing: 0%;\\n\"])));var Mes=styled.pre(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: rgb(255, 255, 255);\\n  font-family: Montserrat;\\n  font-size: 16px;\\n  font-weight: 400;\\n  line-height: 20px;\\n  letter-spacing: 0%;\\n\"])));var Time=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  color: rgb(0, 0, 0);\\n  font-family: Montserrat;\\n  font-size: 10px;\\n  font-weight: 600;\\n  line-height: 12px;\\n  letter-spacing: 0%;\\n\\n  padding-right: 25px;\\n  padding-top: 5px;\\n\"])));","map":{"version":3,"names":["React","styled","Message","props","message","id","user","name","text","avatar","time","MessageWrapper","div","MessageBlock","Block","Avatar","img","SendedMessage","Name","Mes","pre","Time"],"sources":["/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from \"react\";\nimport s from \"./Message.module.css\";\nimport { MessageType } from \"../HW1\";\nimport styled from \"styled-components\";\n\n// нужно создать правильный тип вместо any\n\nexport type MessagePropsType = {\n  message: MessageType;\n};\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n  return (\n    <MessageWrapper id={\"hw1-message-\" + props.message.id}>\n      <MessageBlock>\n        <Block>\n          <SendedMessage>\n            <Name id={\"hw1-name-\" + props.message.id}>\n              {/*создаёт студент*/}\n              {props.message.user.name}\n              {/**/}\n            </Name>\n            <Mes id={\"hw1-text-\" + props.message.id}>\n              {/*создаёт студент*/}\n              {props.message.message.text}\n              {/**/}\n            </Mes>\n          </SendedMessage>\n\n          <Avatar\n            id={\"hw1-avatar-\" + props.message.id}\n            // создаёт студент\n            src={props.message.user.avatar}\n            //\n          />\n        </Block>\n\n        <Time id={\"hw1-time-\" + props.message.id}>\n          {/*создаёт студент*/}\n          {props.message.message.time}\n          {/**/}\n        </Time>\n      </MessageBlock>\n    </MessageWrapper>\n  );\n};\n\nexport default Message;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  justify-content: end;\n  margin-bottom: 50px;\n`;\n\nconst MessageBlock = styled.div`\n  width: 580px;\n  height: 60px;\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n`;\n\nconst Block = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  \n`;\n\nconst Avatar = styled.img`\n  width: 48px;\n  height: 48px;\n  margin-left: 5px;\n  margin-right: 15px;\n`;\n\nconst SendedMessage = styled.div`\nborder-radius: 10px;\n  box-shadow: 0px 1px 2px 0px rgba(29, 33, 38, 0.1),\n    0px 5px 20px 0px rgba(29, 33, 38, 0.03);\n  background: rgb(0, 102, 204);\n\n  width: 527px;\n  height: 60px;\n  text-align: right;\n  padding: 10px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled.div`\n  color: rgb(255, 255, 255);\n  font-family: Montserrat;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 22px;\n  letter-spacing: 0%;\n`;\n\nconst Mes = styled.pre`\n  color: rgb(255, 255, 255);\n  font-family: Montserrat;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  letter-spacing: 0%;\n`;\n\nconst Time = styled.div`\n  color: rgb(0, 0, 0);\n  font-family: Montserrat;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 12px;\n  letter-spacing: 0%;\n\n  padding-right: 25px;\n  padding-top: 5px;\n`;\n"],"mappings":"qUAAA,MAAOA,MAAK,KAAM,OAAO,CAGzB,MAAOC,OAAM,KAAM,mBAAmB,CAEtC;AAAA,wFAMA;AACA,GAAMC,QAAO,CAAG,QAAVA,QAAO,CAAIC,KAAuB,CAAK,CAC3C,mBACE,KAAC,cAAc,EAAC,EAAE,CAAE,cAAc,CAAGA,KAAK,CAACC,OAAO,CAACC,EAAG,uBACpD,MAAC,YAAY,yBACX,MAAC,KAAK,yBACJ,MAAC,aAAa,yBACZ,KAAC,IAAI,EAAC,EAAE,CAAE,WAAW,CAAGF,KAAK,CAACC,OAAO,CAACC,EAAG,UAEtCF,KAAK,CAACC,OAAO,CAACE,IAAI,CAACC,IAAI,EAEnB,cACP,KAAC,GAAG,EAAC,EAAE,CAAE,WAAW,CAAGJ,KAAK,CAACC,OAAO,CAACC,EAAG,UAErCF,KAAK,CAACC,OAAO,CAACA,OAAO,CAACI,IAAI,EAEvB,GACQ,cAEhB,KAAC,MAAM,EACL,EAAE,CAAE,aAAa,CAAGL,KAAK,CAACC,OAAO,CAACC,EAClC;AAAA,CACA,GAAG,CAAEF,KAAK,CAACC,OAAO,CAACE,IAAI,CAACG,MACxB;AAAA,EACA,GACI,cAER,KAAC,IAAI,EAAC,EAAE,CAAE,WAAW,CAAGN,KAAK,CAACC,OAAO,CAACC,EAAG,UAEtCF,KAAK,CAACC,OAAO,CAACA,OAAO,CAACM,IAAI,EAEtB,GACM,EACA,CAErB,CAAC,CAED,cAAeR,QAAO,CAEtB,GAAMS,eAAc,CAAGV,MAAM,CAACW,GAAG,sIAIhC,CAED,GAAMC,aAAY,CAAGZ,MAAM,CAACW,GAAG,0KAM9B,CAED,GAAME,MAAK,CAAGb,MAAM,CAACW,GAAG,4IAKvB,CAED,GAAMG,OAAM,CAAGd,MAAM,CAACe,GAAG,kJAKxB,CAED,GAAMC,cAAa,CAAGhB,MAAM,CAACW,GAAG,uXAc/B,CAED,GAAMM,KAAI,CAAGjB,MAAM,CAACW,GAAG,qNAOtB,CAED,GAAMO,IAAG,CAAGlB,MAAM,CAACmB,GAAG,qNAOrB,CAED,GAAMC,KAAI,CAAGpB,MAAM,CAACW,GAAG,8PAUtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}