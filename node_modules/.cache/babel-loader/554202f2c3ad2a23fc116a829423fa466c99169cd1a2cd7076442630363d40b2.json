{"ast":null,"code":"var _jsxFileName = \"/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from 'react';\nimport s from './Message.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// нужно отобразить приходящие данные\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw1-message-' + props.message.id,\n    className: s.message,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: 'hw1-avatar-' + props.message.id\n        // создаёт студент\n        ,\n        src: props.message.user.avatar\n        //\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-name-' + props.message.id,\n          className: s.name,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: 'hw1-text-' + props.message.id,\n          className: s.messageText,\n          children: props.message.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw1-time-' + props.message.id,\n      className: s.time,\n      children: props.message.message.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","Message","props","message","id","imageAndText","user","avatar","text","name","messageText","time"],"sources":["/Users/senia/Documents/prog2024/React/frontEnd/homeWork/homeWork-sprint2/hws2-master/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport s from './Message.module.css'\nimport { MessageType } from '../HW1'\n\n// нужно создать правильный тип вместо any\n\n\n\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n                    // создаёт студент\n                    src={props.message.user.avatar}\n                    //\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {/*создаёт студент*/}\n                            {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AAAA;AAWpC;AACA,MAAMC,OAAO,GAAIC,KAAuB,IAAK;EACzC,oBACI;IAAK,EAAE,EAAE,cAAc,GAAGA,KAAK,CAACC,OAAO,CAACC,EAAG;IAAC,SAAS,EAAEJ,CAAC,CAACG,OAAQ;IAAA,wBAC7D;MAAK,SAAS,EAAEH,CAAC,CAACK,YAAa;MAAA,wBAC3B;QACI,EAAE,EAAE,aAAa,GAAGH,KAAK,CAACC,OAAO,CAACC;QAClC;QAAA;QACA,GAAG,EAAEF,KAAK,CAACC,OAAO,CAACG,IAAI,CAACC;QACxB;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QAAK,SAAS,EAAEP,CAAC,CAACQ,IAAK;QAAA,wBACnB;UAAK,EAAE,EAAE,WAAW,GAAGN,KAAK,CAACC,OAAO,CAACC,EAAG;UAAC,SAAS,EAAEJ,CAAC,CAACS,IAAK;UAAA,UAEtDP,KAAK,CAACC,OAAO,CAACG,IAAI,CAACG;QAAI;UAAA;UAAA;UAAA;QAAA,QAEtB,eACN;UAAK,EAAE,EAAE,WAAW,GAAGP,KAAK,CAACC,OAAO,CAACC,EAAG;UAAC,SAAS,EAAEJ,CAAC,CAACU,WAAY;UAAA,UAEzDR,KAAK,CAACC,OAAO,CAACA,OAAO,CAACK;QAAI;UAAA;UAAA;UAAA;QAAA,QAE7B;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,EAAE,EAAE,WAAW,GAAGN,KAAK,CAACC,OAAO,CAACC,EAAG;MAAC,SAAS,EAAEJ,CAAC,CAACW,IAAK;MAAA,UAEtDT,KAAK,CAACC,OAAO,CAACA,OAAO,CAACQ;IAAI;MAAA;MAAA;MAAA;IAAA,QAEzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KA9BKV,OAAO;AAgCb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}